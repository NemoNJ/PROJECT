#define DC_motor1 25
#define DC_motor2 26
#define button_start 21
#define button_end   19
bool DC_STATE = true;
int Power[] = {0, 50, 100, 150, 200};
int level = 0;


void ICACHE_RAM_ATTR DC_start_ISR() {
    DC_STATE = true;
}

void ICACHE_RAM_ATTR DC_end_ISR() {
    DC_STATE = false;
}

void DC_control_mode1_Science() {
    if (DC_STATE) {
        analogWrite(DC_motor1, Power[2]);
        delay(1);
        analogWrite(DC_motor2, Power[0]);
        delay(1);
    } else{
        analogWrite(DC_motor1, Power[0]);
        delay(1);
        analogWrite(DC_motor2, Power[2]);
        delay(1);
    }
}
//-------------------------------
volatile int updatetime_DC = 0;
volatile int last_updatetime_DC = 1000;
volatile int randNum = 0;
//-------------------------------
void DC_control_mode2_GamePlay() {
    if (DC_STATE) {
           if(level == 0){
               //--------- mode speed 0 ---------
               analogWrite(DC_motor1, Power[0]);
               delay(1);
               analogWrite(DC_motor2, Power[0]);
               delay(1);  
           }else if(level == 1){
              //--------- mode speed LOW ---------
               analogWrite(DC_motor1, Power[2]);
               delay(1);
               analogWrite(DC_motor2, Power[0]);
               delay(1);
           }else if(level == 2){
              //--------- mode speed HIGH ---------
               analogWrite(DC_motor1, Power[4]);
               delay(1);
               analogWrite(DC_motor2, Power[0]);
               delay(1);
           }else if(level == 3){
             //--------- mode speed RANDOM 3 state 5 min switch ---------
               updatetime_DC =  millis();
               if(updatetime_DC - last_updatetime_DC >= 5000){
                  randNum = random(0, 2); 
                  last_updatetime_DC = millis();
               }
               analogWrite(DC_motor1, Power[randNum]);
               delay(1);
               analogWrite(DC_motor2, Power[0]);
               delay(1);
           }else if(level == 4){
             //--------- mode speed RANDOM 5 state 3 min switch  ---------
             updatetime_DC =  millis();
               if(updatetime_DC - last_updatetime_DC >= 3000){
                  randNum = random(0, 4); 
                  last_updatetime_DC = millis();
               }
               analogWrite(DC_motor1, Power[randNum]);
               delay(1);
               analogWrite(DC_motor2, Power[0]);
               delay(1);
           }else{
               analogWrite(DC_motor1, Power[0]);
               delay(1);
               analogWrite(DC_motor2, Power[0]);
               delay(1);
           } 
    } else{
           if(level == 0){
               //--------- mode speed 0 ---------
               analogWrite(DC_motor1, Power[0]);
               delay(1);
               analogWrite(DC_motor2, Power[0]);
               delay(1);  
           }else if(level == 1){
              //--------- mode speed LOW ---------
               analogWrite(DC_motor1, Power[0]);
               delay(1);
               analogWrite(DC_motor2, Power[2]);
               delay(1);
           }else if(level == 2){
              //--------- mode speed HIGH ---------
               analogWrite(DC_motor1, Power[0]);
               delay(1);
               analogWrite(DC_motor2, Power[4]);
               delay(1);
           }else if(level == 3){
             //--------- mode speed RANDOM 3 state 5 min switch ---------
               updatetime_DC =  millis();
               if(updatetime_DC - last_updatetime_DC >= 5000){
                  int randNum = random(0, 2); 
                  last_updatetime_DC = millis();
               }
               analogWrite(DC_motor1, Power[0]);
               delay(1);
               analogWrite(DC_motor2, Power[randNum]);
               delay(1);
           }else if(level == 4){
             //--------- mode speed RANDOM 5 state 3 min switch  ---------
             updatetime_DC =  millis();
               if(updatetime_DC - last_updatetime_DC >= 3000){
                  int randNum = random(0, 4); 
                  last_updatetime_DC = millis();
               }
               analogWrite(DC_motor1, Power[0]);
               delay(1);
               analogWrite(DC_motor2, Power[randNum]);
               delay(1);
           }else{
               analogWrite(DC_motor1, Power[0]);
               delay(1);
               analogWrite(DC_motor2, Power[0]);
               delay(1);
           } 
    }
}
void setup() {
    pinMode(DC_motor1, OUTPUT);
    pinMode(DC_motor2, OUTPUT);
    attachInterrupt(digitalPinToInterrupt(button_start), DC_start_ISR, FALLING);
    attachInterrupt(digitalPinToInterrupt(button_end), DC_end_ISR, FALLING);
    randomSeed(analogRead(0));  // กำหนด seed เพื่อให้ค่าไม่ซ้ำกันทุกครั้ง
}
volatile char mode = 1;
void loop() {
    if(mode == '1') DC_control_mode1_Science();
    if(mode == '2') DC_control_mode2_GamePlay();
}
